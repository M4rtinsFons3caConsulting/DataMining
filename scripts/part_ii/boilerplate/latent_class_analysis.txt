# This was the best I could find, lol. It's very intersting, but it's not reaaaaly LCA. 
# I think the only real solution is to script this in R if we really want it in the project.

import numpy as np 
import pandas as pd 
from sklearn.mixture import GaussianMixture 
from statsmodels.discrete.discrete_model import MNLogit 

data = pd.read_csv('data.csv') 

X = data.drop('outcome', axis=1) 
y = data['outcome'] 

lca_model = MNLogit(y, X)
lca_results = lca_model.fit() 

latent_classes = lca_results.predict(X) 

gm_model = GaussianMixture(n_components=2) 
gm_model.fit(X) 

mixture_weights = gm_model.weights_ 
mixture_means = gm_model.means_ 

print("Latent Classes:") 
print(latent_classes) 

print("Mixture Weights:") 
print(mixture_weights) 

print("Mixture Means:") 
print(mixture_means)  
